// Copyright (c) 2019-2021 ReactiveUI Association Incorporated. All rights reserved.
// ReactiveUI Association Incorporated licenses this file to you under the MIT license.
// See the LICENSE file in the project root for full license information.

using System.Text;

namespace ReactiveMarbles.PropertyChanged.SourceGenerator
{
    internal sealed record StringBuilderWhenChangedPartialClassCreator : ISourceCreator
    {
        public string Create(PartialClassDatum classDatum)
        {
            var sb = new StringBuilder();
            sb.Append(StringBuilderSourceCreatorHelper.GetAutoGeneratedString());

            foreach (var methodDatum in classDatum.MethodData)
            {
                sb.AppendLine(methodDatum.CreateSource(this));
            }

            var methodSource = sb.ToString();

            return StringBuilderSourceCreatorHelper.GetPartialClass(
                classDatum.NamespaceName,
                classDatum.Name,
                classDatum.AccessModifier,
                classDatum.AncestorClasses,
                methodSource);
        }

        public string Create(SingleExpressionDictionaryImplMethodDatum methodDatum) => SourceCreatorHelpers.GetMapMembers(methodDatum, false);

        public string Create(SingleExpressionOptimizedImplMethodDatum methodDatum)
        {
            var sb = new StringBuilder();
            foreach (var (name, inputType, outputType) in methodDatum.Members)
            {
                sb.Append(StringBuilderSourceCreatorHelper.GetMapEntryChain(inputType, outputType, name));
            }

            return StringBuilderSourceCreatorHelper.GetPartialClassWhenChangedMethodForDirectReturn(methodDatum.InputTypeName, methodDatum.OutputTypeName, methodDatum.AccessModifier, methodDatum.Members);
        }

        public string Create(MultiExpressionMethodDatum methodDatum)
        {
            var expressionParameters = StringBuilderSourceCreatorHelper.GetMultiExpressionMethodParameters(methodDatum.InputType.ToDisplayString(), methodDatum.OutputType.ToDisplayString(), methodDatum.TempReturnTypes);
            var body = StringBuilderSourceCreatorHelper.GetMultiExpressionMethodBodyForPartialClass(methodDatum.TempReturnTypes.Count);

            return StringBuilderSourceCreatorHelper.GetMultiExpressionMethodForPartialClass(methodDatum.InputType.ToDisplayString(), methodDatum.OutputType.ToDisplayString(), methodDatum.AccessModifier, expressionParameters, body);
        }
    }
}
